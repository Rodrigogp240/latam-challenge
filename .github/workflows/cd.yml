name: Build app and create a release in Cloud Deploy

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: delay-api-latam # TODO: update Google Cloud project id
  GAR_LOCATION: southamerica-west1 # TODO: update Artifact Registry location
  REGION: southamerica-west1 # TODO: update Cloud Run service region
  APP: delay-api

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.CR_CREDENTIALS }}"
          token_format: "access_token"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: "${{ env.PROJECT_ID }}"

      - name: Docker auth
        run: |
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and push container
        run: |
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}" -f Dockerfile .
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}"

      - name: Render templatised config manifests
        run: |
          export PROJECT_ID="${{ env.PROJECT_ID }}"
          export REGION="${{ env.REGION }}"
          for template in $(ls config/*.template.yaml); do envsubst < ${template} > ${template%%.*}.yaml ; done

      - name: Create Cloud Deploy delivery pipeline
        run: |
          gcloud deploy apply --file config/clouddeploy.yaml --region ${{ env.GAR_LOCATION }}

      - name: Create release name
        run: |
          echo "RELEASE_NAME=${{ env.APP }}-${{ github.sha }}-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Create Cloud Deploy release
        id: release
        uses: google-github-actions/create-cloud-deploy-release@v0
        with:
          delivery_pipeline: "${{ env.APP }}"
          name: "${{ env.RELEASE_NAME }}"
          region: "${{ env.REGION }}"
          description: "${{ env.GITHUB_COMMIT_MSG }}"
          skaffold_file: "config/skaffold.yaml"
          images: "app=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}"

      - name: Report Cloud Deploy release
        run: |
          echo "Created release ${{ steps.release.outputs.name }}"
          echo "Release link ${{ steps.release.outputs.link }}"
